{
  "name": "DRUID",
  "label": "Druid",
  "description": "Druid is a high-performance, column-oriented, distributed data store.",
  "version": "5.8.0",
  "runAs": {
    "user": "druid",
    "group": "druid"
  },
  "icon": "images/icon.png",
  "parcel": {
    "repoUrl": "http://localhost/parcels/latest/",
    "requiredTags": [
      "cdh",
      "druid"
    ],
    "optionalTags": [
      "druid-plugin"
    ]
  },
  "serviceDependencies": [
    {
      "name": "HDFS",
      "required": "false"
    },
    {
      "name": "YARN",
      "required": "false"
    }
  ],
  "hdfsDirs": [
    {
      "name": "CreateDruidUserDirCommand",
      "label": "Create Druid User Dir",
      "description": "Create the Druid user directory in HDFS.",
      "directoryDescription": "Druid HDFS user directory",
      "path": "/user/${user}",
      "permissions": "0751"
    },
    {
      "name": "CreateDruidStorageDirCommand",
      "label": "Create Druid Storage Dir",
      "description": "Create the directory in HDFS where segment files will be stored.",
      "directoryDescription": "Druid segments directory",
      "path": "${druid_storage_dir}",
      "permissions": "1777"
    },
    {
      "name": "CreateDruidIndexerLogDirCommand",
      "label": "Create Druid Indexer Log Dir",
      "description": "Create the directory in HDFS where indexer logs will be stored.",
      "directoryDescription": "Druid indexer log directory",
      "path": "${druid_indexer_logs_directory}",
      "permissions": "1777"
    }
  ],
  "serviceInit": {
    "preStartSteps": [
      {
        "commandName": "CreateDruidUserDirCommand"
      },
      {
        "commandName": "CreateDruidStorageDirCommand"
      },
      {
        "commandName": "CreateDruidIndexerLogDirCommand"
      }
    ]
  },
  "parameters": [
    {
      "name": "druid_persistent_dir",
      "label": "Local Persistent Directory",
      "description": "Druid saves tasks and segments temporarily in the local disk.  This directory must retain data over reboot and reconfiguration.",
      "default": "/var/lib/druid",
      "type": "path",
      "required": "true",
      "pathType": "localDataDir",
      "configurableInWizard": true
    },
    {
      "name": "druid_extensions_loadList",
      "label": "Druid Extensions",
      "description": "List of Druid extensions",
      "configName": "druid.extensions.loadList",
      "default": "[\"druid-histogram\",\"druid-datasketches\",\"druid-lookups-cached-global\",\"mysql-metadata-storage\"]",
      "type": "string"
    },
    {
      "name": "druid_startup_logging_logProperties",
      "label": "Druid Startup Logging Properties",
      "description": "Log all properties on startup (from common.runtime.properties, runtime.properties, and the JVM command line).",
      "configName": "druid.startup.logging.logProperties",
      "default": "true",
      "type": "boolean"
    },
    {
      "name": "druid_zk_service_host",
      "label": "Druid Zookeeper Service Host",
      "description": "The host name of the Zookeeper",
      "configName": "druid.zk.service.host",
      "default": "localhost:2181",
      "type": "string"
    },
    {
      "name": "druid_zk_paths_base",
      "label": "Druid Zookeeper Paths Base",
      "description": "Zookeeper paths base for Druid",
      "configName": "druid.zk.paths.base",
      "default": "/druid",
      "type": "string"
    },
    {
      "name": "druid_metadata_storage_type",
      "label": "Druid Metadata Storage Type",
      "description": "Database type for the metadata storage",
      "configName": "druid.metadata.storage.type",
      "default": "mysql",
      "type": "string"
    },
    {
      "name": "druid_metadata_storage_connector_connectURI",
      "label": "Meatadata Storage Connector Connect URI",
      "description": "JDBC URI",
      "configName": "druid.metadata.storage.connector.connectURI",
      "default": "jdbc:mysql://localhost:3306/druid",
      "type": "string"
    },
    {
      "name": "druid_metadata_storage_connector_user",
      "label": "Meatadata Storage User",
      "description": "db user",
      "configName": "druid.metadata.storage.connector.user",
      "default": "root",
      "type": "string"
    },
    {
      "name": "druid_metadata_storage_connector_password",
      "label": "Meatadata Storage Password",
      "description": "db password",
      "configName": "druid.metadata.storage.connector.password",
      "default": "cloudera",
      "type": "string"
    },
    {
      "name": "druid_storage_type",
      "label": "Druid Storage Type",
      "description": "Location to save the segments",
      "configName": "druid.storage.type",
      "default": "hdfs",
      "type": "string"
    },
    {
      "name": "druid_storage_dir",
      "label": "Druid Storage Location (HDFS)",
      "description": "The location of Druid segments in HDFS. Changing this value will not move existing segments to the new location.",
      "configName": "druid.storage.storageDirectory",
      "default": "/user/druid/segments",
      "type": "string"
    },
    {
      "name": "druid_indexer_logs_type",
      "label": "Druid Indexer Logs Type",
      "description": "If you are running the indexing service in remote mode, the task logs must be stored in S3, Azure Blob Store or HDFS.",
      "configName": "druid.indexer.logs.type",
      "default": "hdfs",
      "type": "string"
    },
    {
      "name": "druid_indexer_logs_directory",
      "label": "Druid Indexer Logs Directory",
      "description": "The directory to store logs.",
      "configName": "druid.indexer.logs.directory",
      "default": "/user/druid/log",
      "type": "string"
    },
    {
      "name": "druid_javascript_enabled",
      "label": "Druid JavaScript",
      "description": "Set to true to enable JavaScript functionality. This affects the JavaScript parser, filter, extractionFn, aggregator, post-aggregator, router strategy, and worker selection strategy.",
      "configName": "druid.javascript.enabled",
      "default": "false",
      "type": "boolean"
    },
    {
      "name": "druid_sql_enable",
      "label": "Druid SQL",
      "description": "Whether to enable SQL at all, including background metadata fetching. If false, this overrides all other SQL-related properties and disables SQL metadata, serving, and planning completely.",
      "configName": "druid.sql.enable",
      "default": "false",
      "type": "boolean"
    }
  ],
  "rolesWithExternalLinks": [
    "DRUID_OVERLORD",
    "DRUID_COORDINATOR"
  ],
  "roles": [
    {
      "name": "DRUID_OVERLORD",
      "label": "Druid Overlord",
      "pluralLabel": "Druid Overlords",
      "jvmBased": true,
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "overlord",
          "start"
        ],
        "environmentVariables": {
          "OVERLORD_HEAP_SIZE": "${overlord_max_heap_size}"
        }
      },
      "externalLink": {
        "name": "overlord_console",
        "label": "Overlord Console",
        "url": "http://${host}:${overlord_port}"
      },
      "topology": {
        "minInstances": 1
      },
      "logging": {
        "dir": "/var/log/druid",
        "filename": "druid-overlord-${host}.log",
        "configName": "log.dir",
        "modifiable": true,
        "loggingType": "log4j"
      },
      "parameters": [
        {
          "name": "overlord_port",
          "label": "Overlord Port",
          "description": "The port of the overlord",
          "configName": "druid.port",
          "required": "true",
          "type": "port",
          "default": 18090
        },
        {
          "name": "overlord_max_heap_size",
          "label": "Java Heap Size of Overlord",
          "description": "Maximum size for the Java process heap memory. Passed to Java -Xmx. Measured in megabytes. Overlord does not generally require setting large heap sizes. It is better to let the file system cache utilize the available memory.",
          "type": "memory",
          "default": 1024,
          "min": 1024,
          "softMin": 2048,
          "softMax": 16384,
          "unit": "megabytes",
          "scaleFactor": 1.3
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "conf/_common/common.runtime.properties",
            "includedParams": [
              "druid_extensions_loadList",
              "druid_metadata_storage_type",
              "druid_metadata_storage_connector_connectURI",
              "druid_metadata_storage_connector_user",
              "druid_metadata_storage_connector_password",
              "druid_indexer_logs_type",
              "druid_indexer_logs_directory",
              "druid_startup_logging_logProperties",
              "druid_storage_dir",
              "druid_storage_type",
              "druid_zk_paths_base",
              "druid_zk_service_host",
              "druid_javascript_enabled",
              "druid_sql_enable"
            ],
            "additionalConfigs": [
              {
                "key": "druid.extensions.directory",
                "value": "{{DRUID_HOME}}/extensions"
              },
              {
                "key": "druid.extensions.hadoopDependenciesDir",
                "value": "{{DRUID_HOME}}/hadoop-dependencies"
              },
              {
                "key": "druid.selectors.indexing.serviceName",
                "value": "druid/overlord"
              },
              {
                "key": "druid.selectors.coordinator.serviceName",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.monitoring.emissionPeriod",
                "value": "PT1m"
              }
            ],
            "configFormat": "properties"
          },
          {
            "filename": "conf/overlord/runtime.properties",
            "includedParams": [
              "overlord_port"
            ],
            "additionalConfigs": [
              {
                "key": "druid.service",
                "value": "druid/overlord"
              },
              {
                "key": "druid.indexer.queue.startDelay",
                "value": "PT30S"
              },
              {
                "key": "druid.indexer.runner.type",
                "value": "remote"
              },
              {
                "key": "druid.indexer.storage.type",
                "value": "metadata"
              }
            ],
            "configFormat": "properties"
          }
        ]
      }
    },
    {
      "name": "DRUID_COORDINATOR",
      "label": "Druid Coordinator",
      "pluralLabel": "Druid Coordinators",
      "jvmBased": true,
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "coordinator",
          "start"
        ],
        "environmentVariables": {
          "COORDINATOR_HEAP_SIZE": "${coordinator_max_heap_size}"
        }
      },
      "externalLink": {
        "name": "coordinator_console",
        "label": "Coordinator Console",
        "url": "http://${host}:${coordinator_port}"
      },
      "topology": {
        "minInstances": 1
      },
      "logging": {
        "dir": "/var/log/druid",
        "filename": "druid-coordinator-${host}.log",
        "configName": "log.dir",
        "modifiable": true,
        "loggingType": "log4j"
      },
      "parameters": [
        {
          "name": "coordinator_port",
          "label": "Coordinator Port",
          "description": "The port of the coordinator",
          "configName": "druid.port",
          "required": "true",
          "type": "port",
          "default": 18081
        },
        {
          "name": "coordinator_max_heap_size",
          "label": "Java Heap Size of Coordinator",
          "description": "Maximum size for the Java process heap memory. Passed to Java -Xmx. Measured in megabytes. Coordinator does not generally require setting large heap sizes. It is better to let the file system cache utilize the available memory.",
          "type": "memory",
          "default": 1024,
          "min": 1024,
          "softMin": 2048,
          "softMax": 16384,
          "unit": "megabytes",
          "scaleFactor": 1.3
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "conf/_common/common.runtime.properties",
            "includedParams": [
              "druid_extensions_loadList",
              "druid_metadata_storage_type",
              "druid_metadata_storage_connector_connectURI",
              "druid_metadata_storage_connector_user",
              "druid_metadata_storage_connector_password",
              "druid_indexer_logs_type",
              "druid_indexer_logs_directory",
              "druid_startup_logging_logProperties",
              "druid_storage_dir",
              "druid_storage_type",
              "druid_zk_paths_base",
              "druid_zk_service_host",
              "druid_javascript_enabled",
              "druid_sql_enable"
            ],
            "additionalConfigs": [
              {
                "key": "druid.extensions.directory",
                "value": "{{DRUID_HOME}}/extensions"
              },
              {
                "key": "druid.extensions.hadoopDependenciesDir",
                "value": "{{DRUID_HOME}}/hadoop-dependencies"
              },
              {
                "key": "druid.selectors.indexing.serviceName",
                "value": "druid/overlord"
              },
              {
                "key": "druid.selectors.coordinator.serviceName",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.monitoring.emissionPeriod",
                "value": "PT1m"
              }
            ],
            "configFormat": "properties"
          },
          {
            "filename": "conf/coordinator/runtime.properties",
            "includedParams": [
              "coordinator_port"
            ],
            "additionalConfigs": [
              {
                "key": "druid.service",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.coordinator.period",
                "value": "PT30S"
              },
              {
                "key": "druid.coordinator.startDelay",
                "value": "PT30S"
              }
            ],
            "configFormat": "properties"
          }
        ]
      }
    },
    {
      "name": "DRUID_BROKER",
      "label": "Druid Broker",
      "pluralLabel": "Druid Brokers",
      "jvmBased": true,
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "broker",
          "start"
        ],
        "environmentVariables": {
          "BROKER_HEAP_SIZE": "${broker_max_heap_size}"
        }
      },
      "externalLink": {
        "name": "broker_console",
        "label": "Broker Console",
        "url": "http://${host}:${broker_port}"
      },
      "topology": {
        "minInstances": 1
      },
      "logging": {
        "dir": "/var/log/druid",
        "filename": "druid-broker-${host}.log",
        "configName": "log.dir",
        "modifiable": true,
        "loggingType": "log4j"
      },
      "parameters": [
        {
          "name": "broker_port",
          "label": "Broker Port",
          "description": "The port of the broker",
          "configName": "druid.port",
          "required": "true",
          "type": "port",
          "default": 18082
        },
        {
          "name": "broker_max_heap_size",
          "label": "Java Heap Size of Broker",
          "description": "Maximum size for the Java process heap memory. Passed to Java -Xmx. Measured in megabytes.",
          "type": "memory",
          "default": 1024,
          "min": 1024,
          "softMin": 2048,
          "softMax": 16384,
          "unit": "megabytes",
          "scaleFactor": 1.3
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "conf/_common/common.runtime.properties",
            "includedParams": [
              "druid_extensions_loadList",
              "druid_metadata_storage_type",
              "druid_metadata_storage_connector_connectURI",
              "druid_metadata_storage_connector_user",
              "druid_metadata_storage_connector_password",
              "druid_indexer_logs_type",
              "druid_indexer_logs_directory",
              "druid_startup_logging_logProperties",
              "druid_storage_dir",
              "druid_storage_type",
              "druid_zk_paths_base",
              "druid_zk_service_host",
              "druid_javascript_enabled",
              "druid_sql_enable"
            ],
            "additionalConfigs": [
              {
                "key": "druid.extensions.directory",
                "value": "{{DRUID_HOME}}/extensions"
              },
              {
                "key": "druid.extensions.hadoopDependenciesDir",
                "value": "{{DRUID_HOME}}/hadoop-dependencies"
              },
              {
                "key": "druid.selectors.indexing.serviceName",
                "value": "druid/overlord"
              },
              {
                "key": "druid.selectors.coordinator.serviceName",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.monitoring.emissionPeriod",
                "value": "PT1m"
              }
            ],
            "configFormat": "properties"
          },
          {
            "filename": "conf/broker/runtime.properties",
            "includedParams": [
              "broker_port"
            ],
            "additionalConfigs": [
              {
                "key": "druid.service",
                "value": "druid/broker"
              },
              {
                "key": "druid.server.http.numThreads",
                "value": 40
              },
              {
                "key": "druid.processing.buffer.sizeBytes",
                "value": 536870912
              },
              {
                "key": "druid.processing.numThreads",
                "value": 2
              },
              {
                "key": "druid.broker.cache.useCache",
                "value": "false"
              },
              {
                "key": "druid.broker.cache.populateCache",
                "value": "false"
              },
              {
                "key": "druid.broker.http.numConnections",
                "value": 5
              }
            ],
            "configFormat": "properties"
          }
        ]
      }
    },
    {
      "name": "DRUID_MIDDLE_MANAGER",
      "label": "Druid Middle Manager",
      "pluralLabel": "Druid Middle Managers",
      "jvmBased": true,
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "middleManager",
          "start"
        ],
        "environmentVariables": {
          "MIDDLE_MANAGER_HEAP_SIZE": "${middle_manager_max_heap_size}"
        }
      },
      "topology": {
        "minInstances": 1
      },
      "logging": {
        "dir": "/var/log/druid",
        "filename": "druid-middlemanager-${host}.log",
        "configName": "log.dir",
        "modifiable": true,
        "loggingType": "log4j"
      },
      "parameters": [
        {
          "name": "middle_manager_port",
          "label": "Middle Manager Port",
          "description": "The port of the middle manager",
          "configName": "druid.port",
          "required": "true",
          "type": "port",
          "default": 18091
        },
        {
          "name": "middle_manager_max_heap_size",
          "label": "Java Heap Size of Middle Manager",
          "description": "Maximum size for the Java process heap memory. Passed to Java -Xmx. Measured in megabytes. Middle Manager does not generally require setting large heap sizes. It is better to let the file system cache utilize the available memory.",
          "type": "memory",
          "default": 64,
          "min": 64,
          "unit": "megabytes",
          "scaleFactor": 1.3
        },
        {
          "name": "druid_processing_buffer_sizeBytes",
          "label": "Processing Buffer Size",
          "description": "This specifies a buffer size for the storage of intermediate results. The computation engine in both the Historical and Realtime nodes will use a scratch buffer of this size to do all of their intermediate computations off-heap. Larger values allow for more aggregations in a single pass over the data while smaller values can require more passes depending on the query that is being executed.",
          "configName": "druid.processing.buffer.sizeBytes",
          "type": "memory",
          "default": 536870912,
          "unit": "bytes"
        },
        {
          "name": "druid_processing_numThreads",
          "label": "Number of Threads for Processing ",
          "description": "The number of processing threads to have available for parallel processing of segments. Our rule of thumb is num_cores - 1, which means that even under heavy load there will still be one core available to do background tasks like talking with ZooKeeper and pulling down segments. If only one core is available, this property defaults to the value 1.",
          "configName": "druid.processing.numThreads",
          "type": "long",
          "default": 2
        },
        {
          "name": "druid_server_http_numThreads",
          "label": "Druid Server Http Number of Threads",
          "description": "Peon's HTTP server threads?",
          "configName": "druid.server.http.numThreads",
          "type": "long",
          "default": 40
        },
        {
          "name": "druid_indexer_runner_javaOptsArray",
          "label": "Druid Indexer Runner Java Options Array",
          "description": "A json array of strings to be passed in as options to the peon's jvm.",
          "configName": "druid.indexer.runner.javaOptsArray",
          "default": "[\"-server\", \"-Xmx3g\", \"-Duser.timezone=UTC\", \"-Dfile.encoding=UTF-8\", \"-XX:+UseG1GC\", \"-XX:MaxGCPauseMillis=100\", \"-XX:+PrintGCDetails\", \"-XX:+PrintGCTimeStamps\"]",
          "type": "string"
        },
        {
          "name": "druid_worker_capacity",
          "label": "Druid Worker Capacity",
          "description": "Maximum number of tasks the middle manager can accept.",
          "configName": "druid.worker.capacity",
          "type": "long",
          "default": 2,
          "min": 1
        },
        {
          "name": "druid_indexer_task_restoreTasksOnRestart",
          "label": "Druid Indexer Task Restore on Restart",
          "description": "Restore indexer tasks on restart",
          "configName": "druid.indexer.task.restoreTasksOnRestart",
          "default": "true",
          "type": "boolean"
        },
        {
          "name": "druid_indexer_task_defaultHadoopCoordinates",
          "label": "Druid Indexer Task Default Hadoop Coordinates",
          "description": "Hadoop version to use with HadoopIndexTasks that do not request a particular version.",
          "configName": "druid.indexer.task.defaultHadoopCoordinates",
          "default": "[\"org.apache.hadoop:hadoop-client:2.3.0\"]",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "conf/_common/common.runtime.properties",
            "includedParams": [
              "druid_extensions_loadList",
              "druid_metadata_storage_type",
              "druid_metadata_storage_connector_connectURI",
              "druid_metadata_storage_connector_user",
              "druid_metadata_storage_connector_password",
              "druid_indexer_logs_type",
              "druid_indexer_logs_directory",
              "druid_startup_logging_logProperties",
              "druid_storage_dir",
              "druid_storage_type",
              "druid_zk_paths_base",
              "druid_zk_service_host",
              "druid_javascript_enabled",
              "druid_sql_enable"
            ],
            "additionalConfigs": [
              {
                "key": "druid.extensions.directory",
                "value": "{{DRUID_HOME}}/extensions"
              },
              {
                "key": "druid.extensions.hadoopDependenciesDir",
                "value": "{{DRUID_HOME}}/hadoop-dependencies"
              },
              {
                "key": "druid.selectors.indexing.serviceName",
                "value": "druid/overlord"
              },
              {
                "key": "druid.selectors.coordinator.serviceName",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.monitoring.emissionPeriod",
                "value": "PT1m"
              }
            ],
            "configFormat": "properties"
          },
          {
            "filename": "conf/middleManager/runtime.properties",
            "includedParams": [
              "middle_manager_port",
              "druid_processing_buffer_sizeBytes",
              "druid_processing_numThreads",
              "druid_indexer_runner_javaOptsArray",
              "druid_worker_capacity",
              "druid_indexer_task_restoreTasksOnRestart",
              "druid_indexer_task_defaultHadoopCoordinates",
              "druid_server_http_numThreads"
            ],
            "additionalConfigs": [
              {
                "key": "druid.service",
                "value": "druid/middlemanager"
              },
              {
                "key": "druid.indexer.task.baseTaskDir",
                "value": "${druid_persistent_dir}/task"
              }
            ],
            "configFormat": "properties"
          }
        ]
      }
    },
    {
      "name": "DRUID_HISTORICAL",
      "label": "Druid Historical",
      "pluralLabel": "Druid Historicals",
      "jvmBased": true,
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "historical",
          "start"
        ],
        "environmentVariables": {
          "HISTORICAL_HEAP_SIZE": "${historical_max_heap_size}"
        }
      },
      "topology": {
        "minInstances": 1
      },
      "logging": {
        "dir": "/var/log/druid",
        "filename": "druid-historical-${host}.log",
        "configName": "log.dir",
        "modifiable": true,
        "loggingType": "log4j"
      },
      "parameters": [
        {
          "name": "historical_port",
          "label": "Historical Port",
          "description": "The port of the historical",
          "configName": "druid.port",
          "required": "true",
          "type": "port",
          "default": 18083
        },
        {
          "name": "historical_max_heap_size",
          "label": "Java Heap Size of Historical",
          "description": "Maximum size for the Java process heap memory. Passed to Java -Xmx. Measured in megabytes.",
          "type": "memory",
          "default": 1024,
          "min": 1024,
          "softMin": 2048,
          "softMax": 16384,
          "unit": "megabytes",
          "scaleFactor": 1.3
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "conf/_common/common.runtime.properties",
            "includedParams": [
              "druid_extensions_loadList",
              "druid_metadata_storage_type",
              "druid_metadata_storage_connector_connectURI",
              "druid_metadata_storage_connector_user",
              "druid_metadata_storage_connector_password",
              "druid_indexer_logs_type",
              "druid_indexer_logs_directory",
              "druid_startup_logging_logProperties",
              "druid_storage_dir",
              "druid_storage_type",
              "druid_zk_paths_base",
              "druid_zk_service_host",
              "druid_javascript_enabled",
              "druid_sql_enable"
            ],
            "additionalConfigs": [
              {
                "key": "druid.extensions.directory",
                "value": "{{DRUID_HOME}}/extensions"
              },
              {
                "key": "druid.extensions.hadoopDependenciesDir",
                "value": "{{DRUID_HOME}}/hadoop-dependencies"
              },
              {
                "key": "druid.selectors.indexing.serviceName",
                "value": "druid/overlord"
              },
              {
                "key": "druid.selectors.coordinator.serviceName",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.monitoring.emissionPeriod",
                "value": "PT1m"
              }
            ],
            "configFormat": "properties"
          },
          {
            "filename": "conf/historical/runtime.properties",
            "includedParams": [
              "historical_port"
            ],
            "additionalConfigs": [
              {
                "key": "druid.service",
                "value": "druid/historical"
              },
              {
                "key": "druid.server.http.numThreads",
                "value": 40
              },
              {
                "key": "druid.processing.buffer.sizeBytes",
                "value": 256000000
              },
              {
                "key": "druid.processing.numMergeBuffers",
                "value": 2
              },
              {
                "key": "druid.processing.numThreads",
                "value": 2
              },
              {
                "key": "druid.server.maxSize",
                "value": 300000000000
              },
              {
                "key": "druid.historical.cache.useCache",
                "value": "true"
              },
              {
                "key": "druid.historical.cache.populateCache",
                "value": "true"
              },
              {
                "key": "druid.cache.type",
                "value": "local"
              },
              {
                "key": "druid.cache.sizeInBytes",
                "value": 10000000
              },
              {
                "key": "druid.segmentCache.locations",
                "value": "[{\"path\":\"${druid_persistent_dir}/segment-cache\",\"maxSize\":300000000000}]"
              }
            ],
            "configFormat": "properties"
          }
        ]
      }
    },
    {
      "name": "DRUID_ROUTER",
      "label": "Druid Router",
      "pluralLabel": "Druid Router",
      "jvmBased": true,
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [
          "router",
          "start"
        ],
        "environmentVariables": {
          "ROUTER_HEAP_SIZE": "${router_max_heap_size}"
        }
      },
      "externalLink": {
        "name": "router_console",
        "label": "Router Console",
        "url": "http://${host}:${router_port}"
      },
      "topology": {
        "minInstances": 1
      },
      "logging": {
        "dir": "/var/log/druid",
        "filename": "druid-router-${host}.log",
        "configName": "log.dir",
        "modifiable": true,
        "loggingType": "log4j"
      },
      "parameters": [
        {
          "name": "router_port",
          "label": "Router Port",
          "description": "The port of the router",
          "configName": "druid.port",
          "required": "true",
          "type": "port",
          "default": 18888
        },
        {
          "name": "router_max_heap_size",
          "label": "Java Heap Size of router",
          "description": "Maximum size for the Java process heap memory. Passed to Java -Xmx. Measured in megabytes.",
          "type": "memory",
          "default": 1024,
          "min": 1024,
          "softMin": 2048,
          "softMax": 16384,
          "unit": "megabytes",
          "scaleFactor": 1.3
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "conf/_common/common.runtime.properties",
            "includedParams": [
              "druid_extensions_loadList",
              "druid_metadata_storage_type",
              "druid_metadata_storage_connector_connectURI",
              "druid_metadata_storage_connector_user",
              "druid_metadata_storage_connector_password",
              "druid_indexer_logs_type",
              "druid_indexer_logs_directory",
              "druid_startup_logging_logProperties",
              "druid_storage_dir",
              "druid_storage_type",
              "druid_zk_paths_base",
              "druid_zk_service_host",
              "druid_javascript_enabled",
              "druid_sql_enable"
            ],
            "additionalConfigs": [
              {
                "key": "druid.extensions.directory",
                "value": "{{DRUID_HOME}}/extensions"
              },
              {
                "key": "druid.extensions.hadoopDependenciesDir",
                "value": "{{DRUID_HOME}}/hadoop-dependencies"
              },
              {
                "key": "druid.selectors.indexing.serviceName",
                "value": "druid/overlord"
              },
              {
                "key": "druid.selectors.coordinator.serviceName",
                "value": "druid/coordinator"
              },
              {
                "key": "druid.monitoring.emissionPeriod",
                "value": "PT1m"
              }
            ],
            "configFormat": "properties"
          },
          {
            "filename": "conf/router/runtime.properties",
            "includedParams": [
              "router_port"
            ],
            "additionalConfigs": [
              {
                "key": "druid.service",
                "value": "druid/router"
              },
              {
                "key": "druid.server.http.numThreads",
                "value": 40
              },
              {
                "key": "druid.processing.buffer.sizeBytes",
                "value": 536870912
              },
              {
                "key": "druid.processing.numThreads",
                "value": 2
              }
            ],
            "configFormat": "properties"
          }
        ]
      }
    }
  ]
}
